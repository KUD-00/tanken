syntax = "proto3";

package rpc;
option go_package = "tanken/backend/data-fetcher/rpc/pb";

import "general.proto";
import "post.proto";
import "user.proto";

message TestConnectionRequest {
    double foo = 1;
}

message TestConnectionResponse {
    bool ok = 1;
}

service DataFetcherService{
  rpc TestConnection(TestConnectionRequest) returns (TestConnectionResponse) {}
  rpc GetPostsByLocation(GetPostsByLocationRequest) returns (GetPostsByLocationResponse) {}
  rpc GetPostsByPostIds(GetPostsByPostIdsRequest) returns (GetPostsByPostIdsResponse) {}
  rpc GetPostsByUser(GetPostsByUserIdRequest) returns (GetPostsByUserIdResponse) {}

  rpc AddPost(AddPostRequest) returns (AddPostResponse) {}
  rpc HardDeletePost(HardDeletePostRequest) returns (HardDeletePostResponse) {}
  rpc SoftDeletePost(SoftDeletePostRequest) returns (SoftDeletePostResponse) {}

  rpc AddLike(AddLikeRequest) returns (AddLikeResponse) {}
  rpc RemoveLike(RemoveLikeRequest) returns (RemoveLikeResponse) {}

  rpc AddBookmark(AddBookmarkRequest) returns (AddBookmarkResponse) {}
  rpc RemoveBookmark(RemoveBookmarkRequest) returns (RemoveBookmarkResponse) {}

  rpc AddComment(AddCommentRequest) returns (AddCommentResponse) {}
  rpc RemoveComment(RemoveCommentRequest) returns (RemoveCommentResponse) {}
  
  rpc GetUserInfo(GetUserInfoRequest) returns (GetUserInfoResponse);
  rpc SignUpUser(SignUpUserRequest) returns (SignUpUserResponse);
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse);
  rpc HardDeleteUser(HardDeleteUserRequest) returns (HardDeleteUserResponse);
  rpc SoftDeleteUser(SoftDeleteUserRequest) returns (SoftDeleteUserResponse);
  rpc GetUserInfoByOAuth(GetUserInfoByOAuthRequest) returns (GetUserInfoByOAuthResponse);
}