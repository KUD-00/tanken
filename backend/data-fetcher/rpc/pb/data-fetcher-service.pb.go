// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        (unknown)
// source: data-fetcher-service.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TestConnectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Foo float64 `protobuf:"fixed64,1,opt,name=foo,proto3" json:"foo,omitempty"`
}

func (x *TestConnectionRequest) Reset() {
	*x = TestConnectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_fetcher_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestConnectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestConnectionRequest) ProtoMessage() {}

func (x *TestConnectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_data_fetcher_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestConnectionRequest.ProtoReflect.Descriptor instead.
func (*TestConnectionRequest) Descriptor() ([]byte, []int) {
	return file_data_fetcher_service_proto_rawDescGZIP(), []int{0}
}

func (x *TestConnectionRequest) GetFoo() float64 {
	if x != nil {
		return x.Foo
	}
	return 0
}

type TestConnectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *TestConnectionResponse) Reset() {
	*x = TestConnectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_fetcher_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestConnectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestConnectionResponse) ProtoMessage() {}

func (x *TestConnectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_data_fetcher_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestConnectionResponse.ProtoReflect.Descriptor instead.
func (*TestConnectionResponse) Descriptor() ([]byte, []int) {
	return file_data_fetcher_service_proto_rawDescGZIP(), []int{1}
}

func (x *TestConnectionResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

var File_data_fetcher_service_proto protoreflect.FileDescriptor

var file_data_fetcher_service_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x64, 0x61, 0x74, 0x61, 0x2d, 0x66, 0x65, 0x74, 0x63, 0x68, 0x65, 0x72, 0x2d, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x72, 0x70,
	0x63, 0x1a, 0x0d, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x29, 0x0a, 0x15, 0x54, 0x65, 0x73, 0x74, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x66, 0x6f, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x66,
	0x6f, 0x6f, 0x22, 0x28, 0x0a, 0x16, 0x54, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x32, 0x83, 0x0d, 0x0a,
	0x12, 0x44, 0x61, 0x74, 0x61, 0x46, 0x65, 0x74, 0x63, 0x68, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x4b, 0x0a, 0x0e, 0x54, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x65, 0x73, 0x74,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x57, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x42, 0x79, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x6f, 0x73, 0x74, 0x73, 0x42, 0x79, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x6f, 0x73, 0x74, 0x73, 0x42, 0x79, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x50, 0x6f, 0x73, 0x74, 0x73, 0x42, 0x79, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x73, 0x12, 0x1d,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x42, 0x79, 0x50,
	0x6f, 0x73, 0x74, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x42, 0x79, 0x50, 0x6f,
	0x73, 0x74, 0x49, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x4f, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x1c, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x73,
	0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1d, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x42, 0x79,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x36, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x13, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x14, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0e, 0x48, 0x61, 0x72, 0x64,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x1a, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x48, 0x61, 0x72, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x48, 0x61, 0x72,
	0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0e, 0x53, 0x6f, 0x66, 0x74, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x1a, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x6f,
	0x66, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x6f, 0x66, 0x74, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x36, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x4c, 0x69, 0x6b, 0x65, 0x12, 0x13, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x14, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x4c, 0x69, 0x6b, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x0a, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x4c, 0x69, 0x6b, 0x65, 0x12, 0x16, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x17, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4c, 0x69, 0x6b,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x0b, 0x41,
	0x64, 0x64, 0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x17, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x41, 0x64, 0x64, 0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x42, 0x6f, 0x6f,
	0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x4b, 0x0a, 0x0e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72,
	0x6b, 0x12, 0x1a, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42, 0x6f,
	0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61,
	0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x0a,
	0x41, 0x64, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x17, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a,
	0x0d, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x19,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0d, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x4d,
	0x6f, 0x64, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x66, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x42, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x12, 0x23, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x24, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x64,
	0x12, 0x1f, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x42, 0x79, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x20, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x42, 0x79, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0a, 0x53, 0x69, 0x67, 0x6e, 0x55,
	0x70, 0x55, 0x73, 0x65, 0x72, 0x12, 0x16, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x69, 0x67, 0x6e,
	0x55, 0x70, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x55, 0x70, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x16, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0e, 0x48, 0x61, 0x72, 0x64, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1a, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x48, 0x61,
	0x72, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x48, 0x61, 0x72, 0x64, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x49, 0x0a, 0x0e, 0x53, 0x6f, 0x66, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x1a, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x6f, 0x66, 0x74, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x6f, 0x66, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x4f, 0x41, 0x75, 0x74,
	0x68, 0x12, 0x1e, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x42, 0x79, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1f, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x42, 0x79, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x72, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x2e, 0x72, 0x70, 0x63, 0x42, 0x17, 0x44,
	0x61, 0x74, 0x61, 0x46, 0x65, 0x74, 0x63, 0x68, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x22, 0x74, 0x61, 0x6e, 0x6b, 0x65, 0x6e,
	0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2d, 0x66, 0x65,
	0x74, 0x63, 0x68, 0x65, 0x72, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x62, 0xa2, 0x02, 0x03, 0x52,
	0x58, 0x58, 0xaa, 0x02, 0x03, 0x52, 0x70, 0x63, 0xca, 0x02, 0x03, 0x52, 0x70, 0x63, 0xe2, 0x02,
	0x0f, 0x52, 0x70, 0x63, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0xea, 0x02, 0x03, 0x52, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_data_fetcher_service_proto_rawDescOnce sync.Once
	file_data_fetcher_service_proto_rawDescData = file_data_fetcher_service_proto_rawDesc
)

func file_data_fetcher_service_proto_rawDescGZIP() []byte {
	file_data_fetcher_service_proto_rawDescOnce.Do(func() {
		file_data_fetcher_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_data_fetcher_service_proto_rawDescData)
	})
	return file_data_fetcher_service_proto_rawDescData
}

var file_data_fetcher_service_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_data_fetcher_service_proto_goTypes = []interface{}{
	(*TestConnectionRequest)(nil),           // 0: rpc.TestConnectionRequest
	(*TestConnectionResponse)(nil),          // 1: rpc.TestConnectionResponse
	(*GetPostsByLocationRequest)(nil),       // 2: rpc.GetPostsByLocationRequest
	(*GetPostsByPostIdsRequest)(nil),        // 3: rpc.GetPostsByPostIdsRequest
	(*GetPostsByUserIdRequest)(nil),         // 4: rpc.GetPostsByUserIdRequest
	(*AddPostRequest)(nil),                  // 5: rpc.AddPostRequest
	(*HardDeletePostRequest)(nil),           // 6: rpc.HardDeletePostRequest
	(*SoftDeletePostRequest)(nil),           // 7: rpc.SoftDeletePostRequest
	(*AddLikeRequest)(nil),                  // 8: rpc.AddLikeRequest
	(*RemoveLikeRequest)(nil),               // 9: rpc.RemoveLikeRequest
	(*AddBookmarkRequest)(nil),              // 10: rpc.AddBookmarkRequest
	(*RemoveBookmarkRequest)(nil),           // 11: rpc.RemoveBookmarkRequest
	(*AddCommentRequest)(nil),               // 12: rpc.AddCommentRequest
	(*RemoveCommentRequest)(nil),            // 13: rpc.RemoveCommentRequest
	(*ModifyCommentRequest)(nil),            // 14: rpc.ModifyCommentRequest
	(*GetCommentsByCommentIdsRequest)(nil),  // 15: rpc.GetCommentsByCommentIdsRequest
	(*GetCommentsByPostIdRequest)(nil),      // 16: rpc.GetCommentsByPostIdRequest
	(*GetUserInfoRequest)(nil),              // 17: rpc.GetUserInfoRequest
	(*SignUpUserRequest)(nil),               // 18: rpc.SignUpUserRequest
	(*UpdateUserRequest)(nil),               // 19: rpc.UpdateUserRequest
	(*HardDeleteUserRequest)(nil),           // 20: rpc.HardDeleteUserRequest
	(*SoftDeleteUserRequest)(nil),           // 21: rpc.SoftDeleteUserRequest
	(*GetUserInfoByOAuthRequest)(nil),       // 22: rpc.GetUserInfoByOAuthRequest
	(*GetPostsByLocationResponse)(nil),      // 23: rpc.GetPostsByLocationResponse
	(*GetPostsByPostIdsResponse)(nil),       // 24: rpc.GetPostsByPostIdsResponse
	(*GetPostsByUserIdResponse)(nil),        // 25: rpc.GetPostsByUserIdResponse
	(*AddPostResponse)(nil),                 // 26: rpc.AddPostResponse
	(*HardDeletePostResponse)(nil),          // 27: rpc.HardDeletePostResponse
	(*SoftDeletePostResponse)(nil),          // 28: rpc.SoftDeletePostResponse
	(*AddLikeResponse)(nil),                 // 29: rpc.AddLikeResponse
	(*RemoveLikeResponse)(nil),              // 30: rpc.RemoveLikeResponse
	(*AddBookmarkResponse)(nil),             // 31: rpc.AddBookmarkResponse
	(*RemoveBookmarkResponse)(nil),          // 32: rpc.RemoveBookmarkResponse
	(*AddCommentResponse)(nil),              // 33: rpc.AddCommentResponse
	(*RemoveCommentResponse)(nil),           // 34: rpc.RemoveCommentResponse
	(*ModifyCommentResponse)(nil),           // 35: rpc.ModifyCommentResponse
	(*GetCommentsByCommentIdsResponse)(nil), // 36: rpc.GetCommentsByCommentIdsResponse
	(*GetCommentsByPostIdResponse)(nil),     // 37: rpc.GetCommentsByPostIdResponse
	(*GetUserInfoResponse)(nil),             // 38: rpc.GetUserInfoResponse
	(*SignUpUserResponse)(nil),              // 39: rpc.SignUpUserResponse
	(*UpdateUserResponse)(nil),              // 40: rpc.UpdateUserResponse
	(*HardDeleteUserResponse)(nil),          // 41: rpc.HardDeleteUserResponse
	(*SoftDeleteUserResponse)(nil),          // 42: rpc.SoftDeleteUserResponse
	(*GetUserInfoByOAuthResponse)(nil),      // 43: rpc.GetUserInfoByOAuthResponse
}
var file_data_fetcher_service_proto_depIdxs = []int32{
	0,  // 0: rpc.DataFetcherService.TestConnection:input_type -> rpc.TestConnectionRequest
	2,  // 1: rpc.DataFetcherService.GetPostsByLocation:input_type -> rpc.GetPostsByLocationRequest
	3,  // 2: rpc.DataFetcherService.GetPostsByPostIds:input_type -> rpc.GetPostsByPostIdsRequest
	4,  // 3: rpc.DataFetcherService.GetPostsByUser:input_type -> rpc.GetPostsByUserIdRequest
	5,  // 4: rpc.DataFetcherService.AddPost:input_type -> rpc.AddPostRequest
	6,  // 5: rpc.DataFetcherService.HardDeletePost:input_type -> rpc.HardDeletePostRequest
	7,  // 6: rpc.DataFetcherService.SoftDeletePost:input_type -> rpc.SoftDeletePostRequest
	8,  // 7: rpc.DataFetcherService.AddLike:input_type -> rpc.AddLikeRequest
	9,  // 8: rpc.DataFetcherService.RemoveLike:input_type -> rpc.RemoveLikeRequest
	10, // 9: rpc.DataFetcherService.AddBookmark:input_type -> rpc.AddBookmarkRequest
	11, // 10: rpc.DataFetcherService.RemoveBookmark:input_type -> rpc.RemoveBookmarkRequest
	12, // 11: rpc.DataFetcherService.AddComment:input_type -> rpc.AddCommentRequest
	13, // 12: rpc.DataFetcherService.RemoveComment:input_type -> rpc.RemoveCommentRequest
	14, // 13: rpc.DataFetcherService.ModifyComment:input_type -> rpc.ModifyCommentRequest
	15, // 14: rpc.DataFetcherService.GetCommentsByCommentIds:input_type -> rpc.GetCommentsByCommentIdsRequest
	16, // 15: rpc.DataFetcherService.GetCommentsByPostId:input_type -> rpc.GetCommentsByPostIdRequest
	17, // 16: rpc.DataFetcherService.GetUserInfo:input_type -> rpc.GetUserInfoRequest
	18, // 17: rpc.DataFetcherService.SignUpUser:input_type -> rpc.SignUpUserRequest
	19, // 18: rpc.DataFetcherService.UpdateUser:input_type -> rpc.UpdateUserRequest
	20, // 19: rpc.DataFetcherService.HardDeleteUser:input_type -> rpc.HardDeleteUserRequest
	21, // 20: rpc.DataFetcherService.SoftDeleteUser:input_type -> rpc.SoftDeleteUserRequest
	22, // 21: rpc.DataFetcherService.GetUserInfoByOAuth:input_type -> rpc.GetUserInfoByOAuthRequest
	1,  // 22: rpc.DataFetcherService.TestConnection:output_type -> rpc.TestConnectionResponse
	23, // 23: rpc.DataFetcherService.GetPostsByLocation:output_type -> rpc.GetPostsByLocationResponse
	24, // 24: rpc.DataFetcherService.GetPostsByPostIds:output_type -> rpc.GetPostsByPostIdsResponse
	25, // 25: rpc.DataFetcherService.GetPostsByUser:output_type -> rpc.GetPostsByUserIdResponse
	26, // 26: rpc.DataFetcherService.AddPost:output_type -> rpc.AddPostResponse
	27, // 27: rpc.DataFetcherService.HardDeletePost:output_type -> rpc.HardDeletePostResponse
	28, // 28: rpc.DataFetcherService.SoftDeletePost:output_type -> rpc.SoftDeletePostResponse
	29, // 29: rpc.DataFetcherService.AddLike:output_type -> rpc.AddLikeResponse
	30, // 30: rpc.DataFetcherService.RemoveLike:output_type -> rpc.RemoveLikeResponse
	31, // 31: rpc.DataFetcherService.AddBookmark:output_type -> rpc.AddBookmarkResponse
	32, // 32: rpc.DataFetcherService.RemoveBookmark:output_type -> rpc.RemoveBookmarkResponse
	33, // 33: rpc.DataFetcherService.AddComment:output_type -> rpc.AddCommentResponse
	34, // 34: rpc.DataFetcherService.RemoveComment:output_type -> rpc.RemoveCommentResponse
	35, // 35: rpc.DataFetcherService.ModifyComment:output_type -> rpc.ModifyCommentResponse
	36, // 36: rpc.DataFetcherService.GetCommentsByCommentIds:output_type -> rpc.GetCommentsByCommentIdsResponse
	37, // 37: rpc.DataFetcherService.GetCommentsByPostId:output_type -> rpc.GetCommentsByPostIdResponse
	38, // 38: rpc.DataFetcherService.GetUserInfo:output_type -> rpc.GetUserInfoResponse
	39, // 39: rpc.DataFetcherService.SignUpUser:output_type -> rpc.SignUpUserResponse
	40, // 40: rpc.DataFetcherService.UpdateUser:output_type -> rpc.UpdateUserResponse
	41, // 41: rpc.DataFetcherService.HardDeleteUser:output_type -> rpc.HardDeleteUserResponse
	42, // 42: rpc.DataFetcherService.SoftDeleteUser:output_type -> rpc.SoftDeleteUserResponse
	43, // 43: rpc.DataFetcherService.GetUserInfoByOAuth:output_type -> rpc.GetUserInfoByOAuthResponse
	22, // [22:44] is the sub-list for method output_type
	0,  // [0:22] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_data_fetcher_service_proto_init() }
func file_data_fetcher_service_proto_init() {
	if File_data_fetcher_service_proto != nil {
		return
	}
	file_general_proto_init()
	file_post_proto_init()
	file_user_proto_init()
	file_comment_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_data_fetcher_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestConnectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_fetcher_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestConnectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_data_fetcher_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_data_fetcher_service_proto_goTypes,
		DependencyIndexes: file_data_fetcher_service_proto_depIdxs,
		MessageInfos:      file_data_fetcher_service_proto_msgTypes,
	}.Build()
	File_data_fetcher_service_proto = out.File
	file_data_fetcher_service_proto_rawDesc = nil
	file_data_fetcher_service_proto_goTypes = nil
	file_data_fetcher_service_proto_depIdxs = nil
}
